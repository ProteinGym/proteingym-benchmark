vars:
  - params.yaml

  - datasets:
{%- for dataset in datasets %}
    - name: {{ dataset.name }}
      container_path: {{ dataset.container_path }}
      local_path: {{ dataset.local_path }}
{%- endfor %}

  - models:
{%- for model in models %}
    - name: {{ model.name }}
      container_path: {{ model.container_path }}
      local_path: {{ model.local_path }}
      dockerfile: {{ model.dockerfile }}
{%- endfor %}

stages:

  setup:
    cmd:
      - mkdir -p logs ${destination.output_dir} ${destination.metric_dir}
      - echo "Created local directories" > logs/setup.txt
    outs:
      - logs/setup.txt

  create_training_job:
    matrix:
      dataset: ${datasets}
      model: ${models}

    cmd:
      - docker build --build-arg GIT_CACHE_BUST=${git.git_cache_bust} --secret id=git_auth,src=../git-auth.txt -f ${item.model.dockerfile} -t ${item.model.name}:latest ../../..
      - docker run --rm -v $(realpath ${source.datasets_dir}):/datasets -v $(realpath ${source.models_dir}):/models -v $(realpath ${destination.output_dir}):/opt/ml/model ${item.model.name}:latest train --dataset-file ${item.dataset.container_path} --model-card-file ${item.model.container_path}
      - docker image prune -a -f

    deps:
      - logs/setup.txt
      - ${item.dataset.local_path}
      - ${item.model.local_path}
      - ${item.model.dockerfile}
    outs:
      - ${destination.output_dir}/${item.dataset.name}_${item.model.name}.csv:
          cache: true

  calculate_metric:
    matrix:
      dataset: ${datasets}
      model: ${models}

    cmd: uv run pg2-benchmark metric calc --output-path ${destination.output_dir}/${item.dataset.name}_${item.model.name}.csv --metric-path ${destination.metric_dir}/${item.dataset.name}_${item.model.name}.csv
    deps:
      - ${destination.output_dir}/${item.dataset.name}_${item.model.name}.csv
    outs:
      - ${destination.metric_dir}/${item.dataset.name}_${item.model.name}.csv:
          cache: true