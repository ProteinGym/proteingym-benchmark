vars:
  - local:
      data_dir: data
      model_dir: model
      output_dir: output/local
      metric_dir: metric/local

  - datasets:
    - name: charge_ladder
      path: data/dummy/charge_ladder.toml
  
    - name: neime
      path: data/neime/neime.toml

  - models:
    - name: pls
      path: model/pls.toml
      dockerfile: ../models/pls

stages:
  create_training_job:
    matrix: 
      dataset: ${datasets}
      model: ${models}
    
    cmd: 
      - docker build --secret id=git_auth,src=git-auth.txt -t ${item.model.name}:latest ${item.model.dockerfile} --no-cache
      - docker run --rm -v $(realpath ${local.data_dir}):/data -v $(realpath ${local.model_dir}):/model -v $(realpath ${local.output_dir}):/output ${item.model.name}:latest train --dataset-toml-file /${item.dataset.path} --model-toml-file /${item.model.path}
      - docker image prune -a -f
    deps:
      - ${item.dataset.path}
      - ${item.model.path}
      - ${item.model.dockerfile}
    outs:
      - ${local.output_dir}/${item.dataset.name}_${item.model.name}.csv:
          cache: true

  calculate_metric:
    matrix: 
      dataset: ${datasets}
      model: ${models}
    
    cmd: uv run pg2-benchmark metric calc --output-path ${local.output_dir}/${item.dataset.name}_${item.model.name}.csv --metric-path ${local.metric_dir}/${item.dataset.name}_${item.model.name}.csv
    deps:
      - ${local.output_dir}/${item.dataset.name}_${item.model.name}.csv
    outs:
      - ${local.metric_dir}/${item.dataset.name}_${item.model.name}.csv:
          cache: true
